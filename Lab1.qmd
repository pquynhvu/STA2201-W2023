---
title: "Lab 1"
author: "Quynh Vu"
date: "15/01/2023"
format: 
    pdf:
      toc: true
---

```{r library}
library(tidyverse)
```

```{r echo=TRUE}
url1 <- "https://www.prdh.umontreal.ca/BDLC/data/ont/Mx_1x1.txt"
dd <- read.table(url1, header = TRUE, skip = 2)
dd$Female <- as.double(dd$Female)
dd$Male <- as.double(dd$Male)
dd$Year <- as.double(dd$Year)
dd$Total <- as.double(dd$Total)
```

# 1. Plot the ratio of male to female mortality rates over time for ages 10,20,30 and 40 (different color for each age) and change the theme

```{r echo=TRUE}
dd_Age <- dd |> 
             filter(Age == 10|Age == 20|Age == 30|Age == 40)|>
             mutate(mf_ratio = Male/Female)
dd_Age |> 
       ggplot(aes(x = Year, y = mf_ratio, color = Age)) + 
       geom_line() + 
       scale_color_brewer(palette = "Set1") +
       labs(title = "The ratio of male to female mortality rates over time", 
       subtitle = "for ages 10,20,30 and 40",
       y = "Male to female mortality ratios") + 
       theme_classic(base_size = 10) # change theme
```

# 2. Find the age that has the highest female mortality rate each year

```{r}
dd_HighestF <- dd |> 
                  select(Year:Female) |> 
                  merge(aggregate(Female~Year, dd, max, na.rm=TRUE))
dd_HighestF
```

# 3. Use the `summarize(across())` syntax to calculate the standard deviation of mortality rates by age for the Male, Female and Total populations.

```{r}
dd_SD <- dd |> 
            group_by(Age) |> 
            summarize(across(Female:Total, sd, na.rm = TRUE))
dd_SD
```

# 4. The Canadian HMD also provides population sizes over time (https://www.prdh.umontreal.ca/BDLC/data/ont/Population.txt). Use these to calculate the population weighted average mortality rate separately for males and females, for every year. Make a nice line plot showing the result (with meaningful labels/titles) and briefly comment on what you see (1 sentence). Hint: `left_join` will probably be useful here.

```{r}
url2 <- "https://www.prdh.umontreal.ca/BDLC/data/ont/Population.txt"
dp <- read.table(url2, header = TRUE, skip = 2)
```

```{r}
dp_Male <- dp |>
              select(Year, Age, Male) |> # subset Male and group by year
              group_by(Year)|>
              mutate(TotalMale = sum(Male)) |>
              mutate(MWeight = Male/TotalMale) |>
              filter(Year < 2020) # we don't have data on 2020 mortality rates
dp_Male$M_mortality <- dd$Male 
Male_weightedmean <- dp_Male |>                                           
                             group_by(Year) |> 
                             summarise(weighted.mean(M_mortality, MWeight))
```

```{r}
dp_Female <- dp |>
                select(Year, Age, Female) |> # subset Female and group by year
                group_by(Year)|>
                mutate(TotalFemale = sum(Female)) |>
                mutate(FWeight = Female/TotalFemale) |>
                filter(Year < 2020) # we don't have data on 2020 mortality rates
dp_Female$F_mortality <- dd$Female 
Female_weightedmean <- dp_Female |>                                           
                             group_by(Year) |> 
                             summarise(weighted.mean(F_mortality, FWeight))
```

```{r}
weightedMean <- merge(Female_weightedmean, Male_weightedmean)
colnames(weightedMean) <- c("Year", "Female", "Male") 
weightedMean
```

The weighted average mortality rate across 111 age groups of males was consistently higher than that of females from 1921 to 2019, though both of which appear to decrease over time.

```{r}
weightedMean_long <- weightedMean |> 
  					                       pivot_longer(Female:Male, names_to = "sex", 
  					                                    values_to = "WeightedMean")

weightedMean_long |> 
                  ggplot(aes(x = Year, y = WeightedMean, color = sex)) + 
                  geom_line()+
                  labs(title = "Weighted average mortality rate for males and females", 
                       subtitle = "from 1921 to 2019",
                       y = "Weighted average mortality rate") + 
                  theme_minimal()
```
